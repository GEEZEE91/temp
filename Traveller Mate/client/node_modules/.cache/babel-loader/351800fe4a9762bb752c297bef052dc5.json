{"ast":null,"code":"var _jsxFileName = \"/Volumes/backup/traveller_mate/temp/travel-planner-2a0063fe1b3203f7048415f20e708bf3077e5d9c/client/src/components/HotelSearch/index.js\";\nimport React, { useState } from \"react\";\nimport { Form, Button, Message, Modal, Rating } from \"semantic-ui-react\";\nimport AirportSearch from \"../CustomFields/AiportSearch\";\nimport DateInput from \"../CustomFields/DateInput\";\nimport NumberInput from \"../CustomFields/NumberInput\";\n\nconst HotelSearchForm = ({\n  amadeus,\n  setSearchResult\n}) => {\n  const [searchData, setSearchData] = useState({\n    radius: \"20\",\n    currencyCode: \"AUD\"\n  }); // The object that'll hold all the query parameter. Preset to at most 20km away from airport\n\n  const [isLoading, setLoading] = useState(false); // State to display if the form is loading\n\n  const [error, setError] = useState(false);\n  const [noResult, setNoResult] = useState(false); // States to let user knows if there's any error\n\n  const [open, setOpen] = useState(false); // For Modal\n\n  const inlineStyle = {\n    modal: {\n      height: \"auto\",\n      top: \"auto\",\n      left: \"auto\",\n      bottom: \"auto\",\n      right: \"auto\"\n    }\n  };\n\n  const handleSubmit = () => {\n    // if (searchData.originLocationCode && searchData.destinationLocationCode && searchData.departureDate && searchData.adults){\n    setLoading(true);\n    amadeus.referenceData.locations.hotels.byCity.get(searchData).then(({\n      data\n    }) => {\n      // clean up duplicate price options, as the API has sorted the cheapest with shortest travel time option first\n      // duplicate option is redundant\n      setLoading(false);\n\n      if (data.length) {\n        setSearchResult(data);\n        setError(false);\n        setNoResult(false);\n        setOpen(false);\n      } else setNoResult(true);\n    }).catch(responseError => {\n      setLoading(false);\n      setError(true);\n    }); // }\n    // console.log(searchData);\n  };\n\n  const rating = [2, 3, 4, 5];\n\n  const handleRate = (e, {\n    rating\n  }) => {// console.log(rating);\n    // Will be added later\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    open: open,\n    style: inlineStyle.modal,\n    trigger: /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-cust\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 16\n      }\n    }, \"Search a Hotel\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    loading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AirportSearch, {\n    type: \"Arrival\",\n    name: \"cityCode\",\n    searchData: searchData,\n    setSearchData: setSearchData,\n    amadeus: amadeus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DateInput, {\n    type: \"Check in\",\n    name: \"checkInDate\",\n    searchData: searchData,\n    setSearchData: setSearchData,\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(DateInput, {\n    type: \"Check out\",\n    name: \"checkOutDate\",\n    searchData: searchData,\n    setSearchData: setSearchData,\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NumberInput, {\n    type: \"Number of guests\",\n    name: \"adults\",\n    searchData: searchData,\n    setSearchData: setSearchData,\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(NumberInput, {\n    type: \"Number of rooms\",\n    name: \"roomQuantity\",\n    searchData: searchData,\n    setSearchData: setSearchData,\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  })), error ? /*#__PURE__*/React.createElement(Message, {\n    negative: true,\n    header: \"Bad Request\",\n    content: \"Please check your request\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null), noResult ? /*#__PURE__*/React.createElement(Message, {\n    negative: true,\n    header: \"No matches\",\n    content: \"There's no hotel offer that matches your criteria\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(Form.Field, {\n    control: Button,\n    color: \"blue\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default HotelSearchForm;","map":{"version":3,"sources":["/Volumes/backup/traveller_mate/temp/travel-planner-2a0063fe1b3203f7048415f20e708bf3077e5d9c/client/src/components/HotelSearch/index.js"],"names":["React","useState","Form","Button","Message","Modal","Rating","AirportSearch","DateInput","NumberInput","HotelSearchForm","amadeus","setSearchResult","searchData","setSearchData","radius","currencyCode","isLoading","setLoading","error","setError","noResult","setNoResult","open","setOpen","inlineStyle","modal","height","top","left","bottom","right","handleSubmit","referenceData","locations","hotels","byCity","get","then","data","length","catch","responseError","rating","handleRate","e"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button, Message, Modal, Rating } from \"semantic-ui-react\";\nimport AirportSearch from \"../CustomFields/AiportSearch\";\nimport DateInput from \"../CustomFields/DateInput\";\nimport NumberInput from \"../CustomFields/NumberInput\";\n\nconst HotelSearchForm = ({ amadeus, setSearchResult }) => {\n  const [searchData, setSearchData] = useState({\n    radius: \"20\",\n    currencyCode: \"AUD\",\n  });\n  // The object that'll hold all the query parameter. Preset to at most 20km away from airport\n  const [isLoading, setLoading] = useState(false);\n  // State to display if the form is loading\n\n  const [error, setError] = useState(false);\n  const [noResult, setNoResult] = useState(false);\n  // States to let user knows if there's any error\n\n  const [open, setOpen] = useState(false); // For Modal\n\n  const inlineStyle = {\n    modal: {\n      height: \"auto\",\n      top: \"auto\",\n      left: \"auto\",\n      bottom: \"auto\",\n      right: \"auto\",\n    },\n  };\n\n  const handleSubmit = () => {\n    // if (searchData.originLocationCode && searchData.destinationLocationCode && searchData.departureDate && searchData.adults){\n    setLoading(true);\n    amadeus.referenceData.locations.hotels.byCity\n      .get(searchData)\n      .then(({ data }) => {\n        // clean up duplicate price options, as the API has sorted the cheapest with shortest travel time option first\n        // duplicate option is redundant\n        setLoading(false);\n\n        if (data.length) {\n          setSearchResult(data);\n          setError(false);\n          setNoResult(false);\n          setOpen(false);\n        } else setNoResult(true);\n      })\n      .catch((responseError) => {\n        setLoading(false);\n        setError(true);\n      });\n    // }\n    // console.log(searchData);\n  };\n\n  const rating = [2, 3, 4, 5];\n  const handleRate = (e, { rating }) => {\n    // console.log(rating);\n    // Will be added later\n  };\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      style={inlineStyle.modal}\n      trigger={<Button className=\"btn-cust\">Search a Hotel</Button>}\n    >\n      <Modal.Content>\n        <Form loading={isLoading}>\n          <AirportSearch\n            type={\"Arrival\"}\n            name={\"cityCode\"}\n            searchData={searchData}\n            setSearchData={setSearchData}\n            amadeus={amadeus}\n          />\n          <Form.Group widths=\"equal\">\n            <DateInput\n              type={\"Check in\"}\n              name={\"checkInDate\"}\n              searchData={searchData}\n              setSearchData={setSearchData}\n              isRequired\n            />\n            <DateInput\n              type={\"Check out\"}\n              name={\"checkOutDate\"}\n              searchData={searchData}\n              setSearchData={setSearchData}\n              isRequired\n            />\n          </Form.Group>\n          <Form.Group widths=\"equal\">\n            {/* <NumberInput type={'Maximum distance from airport (miles)'} name = {'radius'}\n                        searchData={searchData} setSearchData={setSearchData}\n                        isRequired/> */}\n            <NumberInput\n              type={\"Number of guests\"}\n              name={\"adults\"}\n              searchData={searchData}\n              setSearchData={setSearchData}\n              isRequired\n            />\n            <NumberInput\n              type={\"Number of rooms\"}\n              name={\"roomQuantity\"}\n              searchData={searchData}\n              setSearchData={setSearchData}\n              isRequired\n            />\n          </Form.Group>\n          {/* <Form.Group widths='equal'> */}\n          {/* <div style={{fontWeight: 'bold', marginBottom:'10px'}}>Minimum rating: <Rating icon='star' defaultRating={1} maxRating={5} onRate={handleRate}/></div> */}\n          {error ? (\n            <Message\n              negative\n              header=\"Bad Request\"\n              content=\"Please check your request\"\n            />\n          ) : (\n            <></>\n          )}\n          {noResult ? (\n            <Message\n              negative\n              header=\"No matches\"\n              content=\"There's no hotel offer that matches your criteria\"\n            />\n          ) : (\n            <></>\n          )}\n          <Form.Field control={Button} color={\"blue\"} onClick={handleSubmit}>\n            Submit\n          </Form.Field>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default HotelSearchForm;\n"]},"metadata":{},"sourceType":"module"}