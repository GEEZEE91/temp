{"ast":null,"code":"var _jsxFileName = \"/Volumes/backup/traveller_mate/temp/travel-planner-2a0063fe1b3203f7048415f20e708bf3077e5d9c/client/src/components/HotelDetail/index.js\";\nimport React, { useState } from 'react';\nimport { Accordion, Icon, Button, Popup } from 'semantic-ui-react';\nimport { timeFormater } from '../../utils/helpers';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_HOTEL } from '../../utils/mutations';\n\nconst HotelDetail = ({\n  hotelResult,\n  activeIndex,\n  setActiveIndex,\n  id,\n  tripID\n}) => {\n  const {\n    hotel: {\n      name,\n      rating,\n      contact,\n      hotelDistance\n    },\n    offers\n  } = hotelResult;\n  const {\n    price: {\n      total,\n      currency\n    }\n  } = offers[0]; // Temporary popup\n\n  const [open, setOpen] = useState(false);\n  const [addHotel, {\n    error\n  }] = useMutation(ADD_HOTEL);\n\n  const handleClick = (e, {\n    index\n  }) => {\n    const newIndex = activeIndex === index ? -1 : index;\n    setActiveIndex(newIndex);\n  };\n\n  const handleSave = async () => {\n    // Create HotelInput for mutation\n    const HotelInput = {};\n    HotelInput.tripId = tripID;\n    HotelInput.name = name;\n    HotelInput.startDate = timeFormater(hotelResult.offers[0].checkInDate);\n    HotelInput.endDate = timeFormater(hotelResult.offers[0].checkOutDate);\n    HotelInput.cost = parseInt(total);\n    HotelInput.rooms = parseInt(hotelResult.offers[0].roomQuantity);\n    if (!HotelInput.rooms) HotelInput.rooms = 1; // Send Mutation\n\n    try {\n      const data = await addHotel({\n        variables: {\n          hotelData: HotelInput\n        }\n      });\n      setActiveIndex(-1); // console.log(data);\n    } catch (err) {\n      alert(\"Something went wrong\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Accordion.Title, {\n    active: activeIndex === id,\n    index: id,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), name, ' ', \" \", total, ' ', currency), /*#__PURE__*/React.createElement(Accordion.Content, {\n    active: activeIndex === id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, hotelDistance.distance, \"km away from airport\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"Rating: \", rating, \" star\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Phone: \", contact.phone), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Fax: \", contact.fax), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    content: 'Save',\n    onClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }))));\n};\n\nexport default HotelDetail;","map":{"version":3,"sources":["/Volumes/backup/traveller_mate/temp/travel-planner-2a0063fe1b3203f7048415f20e708bf3077e5d9c/client/src/components/HotelDetail/index.js"],"names":["React","useState","Accordion","Icon","Button","Popup","timeFormater","useMutation","ADD_HOTEL","HotelDetail","hotelResult","activeIndex","setActiveIndex","id","tripID","hotel","name","rating","contact","hotelDistance","offers","price","total","currency","open","setOpen","addHotel","error","handleClick","e","index","newIndex","handleSave","HotelInput","tripId","startDate","checkInDate","endDate","checkOutDate","cost","parseInt","rooms","roomQuantity","data","variables","hotelData","err","alert","distance","phone","fax"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Accordion, Icon, Button,Popup} from 'semantic-ui-react';\nimport {timeFormater} from '../../utils/helpers';\nimport {useMutation} from '@apollo/react-hooks';\nimport {ADD_HOTEL} from '../../utils/mutations';\n\nconst HotelDetail = ({hotelResult, activeIndex, setActiveIndex, id, tripID})=>{\n    const {hotel:{name,rating,contact, hotelDistance},offers} =hotelResult;\n    const {price:{total,currency}} = offers[0];\n\n    // Temporary popup\n    const [open, setOpen] = useState(false);\n\n    const [addHotel, {error}] =useMutation(ADD_HOTEL);\n\n\n    const handleClick = (e,{index}) =>{\n        const newIndex = (activeIndex === index)? -1 : index;\n        setActiveIndex(newIndex);\n    }\n    const handleSave = async()=>{\n        // Create HotelInput for mutation\n        const HotelInput={};\n        HotelInput.tripId = tripID;\n        HotelInput.name = name;\n        HotelInput.startDate=timeFormater(hotelResult.offers[0].checkInDate);\n        HotelInput.endDate=timeFormater(hotelResult.offers[0].checkOutDate);\n        HotelInput.cost = parseInt(total);\n        HotelInput.rooms = parseInt(hotelResult.offers[0].roomQuantity);\n        if (!HotelInput.rooms) HotelInput.rooms=1;\n        // Send Mutation\n        try {\n            const data = await addHotel(\n                {\n                    variables:{hotelData: HotelInput}\n                }\n            );\n            setActiveIndex(-1);\n\n            // console.log(data);\n        } catch (err){\n            alert(\"Something went wrong\");\n        }\n    }\n\n    return (\n        <>\n            <Accordion.Title active = {activeIndex === id} index={id} onClick={handleClick}>\n                <Icon name='dropdown' />\n                {/* Header information */}\n                    {name}{' '} {total}{' '}{currency}\n            </Accordion.Title>\n            <Accordion.Content active={activeIndex === id}>\n                {/* Departure and returning */}\n                <p>{hotelDistance.distance}km away from airport</p>\n                <p>Rating: {rating} star</p>\n                <p>Phone: {contact.phone}</p>\n                <p>Fax: {contact.fax}</p>\n                <div className={\"text-right\"}>\n                <Button content={'Save'} onClick={handleSave}/>\n\n                </div>\n            </Accordion.Content>\n        </>\n    );\n\n}\n\n\nexport default HotelDetail;"]},"metadata":{},"sourceType":"module"}