{"ast":null,"code":"var _jsxFileName = \"/Volumes/backup/traveller_mate/temp/travel-planner-2a0063fe1b3203f7048415f20e708bf3077e5d9c/client/src/components/FlightSearch/index.js\";\nimport React, { useState } from 'react';\nimport { Form, Button, Message, Modal } from 'semantic-ui-react';\nimport AirportSearch from '../CustomFields/AiportSearch';\nimport DateInput from '../CustomFields/DateInput';\nimport NumberInput from '../CustomFields/NumberInput';\n\nconst FlightSearchForm = ({\n  amadeus,\n  setSearchResult\n}) => {\n  const [searchData, setSearchData] = useState({\n    currencyCode: 'AUD'\n  }); // The object that'll hold all the query parameter\n\n  const [isLoading, setLoading] = useState(false); // State to display if the form is loading\n\n  const [error, setError] = useState(false);\n  const [noResult, setNoResult] = useState(false); // States to let user knows if there's any error\n\n  const [open, setOpen] = useState(false); // For Modal\n\n  const inlineStyle = {\n    modal: {\n      height: 'auto',\n      top: 'auto',\n      left: 'auto',\n      bottom: 'auto',\n      right: 'auto'\n    }\n  };\n  const travelClass = [{\n    key: 'eco',\n    text: 'Economy',\n    value: 'ECONOMY'\n  }, {\n    key: 'pre',\n    text: 'Premium Economy',\n    value: 'PREMIUM_ECONOMY'\n  }, {\n    key: 'bus',\n    text: 'Business',\n    value: 'BUSINESS'\n  }, {\n    key: 'fir',\n    text: 'First class',\n    value: 'FIRST'\n  }];\n\n  const saveOption = (e, {\n    name,\n    value,\n    checked\n  }) => {\n    // Handle changes on both select boxes and radio\n    // Value is avaliable on select boxes, checked on radio\n    if (value) setSearchData({ ...searchData,\n      [name]: value\n    });\n    if (typeof checked !== 'undefined') setSearchData({ ...searchData,\n      [name]: checked\n    });\n  };\n\n  const handleSubmit = () => {\n    if (searchData.originLocationCode && searchData.destinationLocationCode && searchData.departureDate && searchData.adults) {\n      setLoading(true);\n      amadeus.shopping.flightOffersSearch.get(searchData).then(({\n        data\n      }) => {\n        // console.log(data);\n        // clean up duplicate price options, as the API has sorted the cheapest with shortest travel time option first\n        // duplicate option is redundant\n        const cleanedData = data.filter((option, index) => index === 0 || index > 0 && (option.price.grandTotal !== data[index - 1].price.grandTotal || option.validatingAirlineCodes[0] !== data[index - 1].validatingAirlineCodes[0]));\n        setLoading(false);\n\n        if (cleanedData.length) {\n          setSearchResult(cleanedData);\n          setError(false);\n          setNoResult(false);\n          setOpen(false);\n        } else setNoResult(true);\n      }).catch(responseError => {\n        setLoading(false);\n        setError(true);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    open: open,\n    style: inlineStyle.modal,\n    trigger: /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 20\n      }\n    }, \"Search a Flight\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    loading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(AirportSearch, {\n    type: 'Origin',\n    name: 'originLocationCode',\n    searchData: searchData,\n    setSearchData: setSearchData,\n    amadeus: amadeus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(AirportSearch, {\n    type: 'Destination',\n    name: 'destinationLocationCode',\n    searchData: searchData,\n    setSearchData: setSearchData,\n    amadeus: amadeus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(DateInput, {\n    type: 'Departure',\n    name: 'departureDate',\n    searchData: searchData,\n    setSearchData: setSearchData,\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(DateInput, {\n    type: 'Return',\n    name: 'returnDate',\n    searchData: searchData,\n    setSearchData: setSearchData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Select, {\n    fluid: true,\n    label: `Flight classes`,\n    options: travelClass,\n    name: \"travelClass\",\n    placeholder: \"Please select an option\",\n    onChange: saveOption,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NumberInput, {\n    type: 'Adult',\n    name: 'adults',\n    searchData: searchData,\n    setSearchData: setSearchData,\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(NumberInput, {\n    type: 'Children',\n    name: 'children',\n    searchData: searchData,\n    setSearchData: setSearchData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(NumberInput, {\n    type: 'Infants',\n    name: 'infants',\n    searchData: searchData,\n    setSearchData: setSearchData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Checkbox, {\n    name: \"nonStop\",\n    label: `Nonstop flight`,\n    onChange: saveOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }), error ? /*#__PURE__*/React.createElement(Message, {\n    negative: true,\n    header: \"Bad Request\",\n    content: \"Please check your request\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null), noResult ? /*#__PURE__*/React.createElement(Message, {\n    negative: true,\n    header: \"No matches\",\n    content: \"Current API use only support within the US\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 36\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(Form.Field, {\n    control: Button,\n    color: 'blue',\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, \"Submit\"))));\n};\n\nexport default FlightSearchForm;","map":{"version":3,"sources":["/Volumes/backup/traveller_mate/temp/travel-planner-2a0063fe1b3203f7048415f20e708bf3077e5d9c/client/src/components/FlightSearch/index.js"],"names":["React","useState","Form","Button","Message","Modal","AirportSearch","DateInput","NumberInput","FlightSearchForm","amadeus","setSearchResult","searchData","setSearchData","currencyCode","isLoading","setLoading","error","setError","noResult","setNoResult","open","setOpen","inlineStyle","modal","height","top","left","bottom","right","travelClass","key","text","value","saveOption","e","name","checked","handleSubmit","originLocationCode","destinationLocationCode","departureDate","adults","shopping","flightOffersSearch","get","then","data","cleanedData","filter","option","index","price","grandTotal","validatingAirlineCodes","length","catch","responseError"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { Form, Button, Message, Modal } from 'semantic-ui-react'\nimport AirportSearch from '../CustomFields/AiportSearch';\nimport DateInput from '../CustomFields/DateInput';\nimport NumberInput from '../CustomFields/NumberInput';\n\nconst FlightSearchForm = ({amadeus, setSearchResult})=>{\n    const [searchData, setSearchData] = useState({currencyCode:'AUD'});\n    // The object that'll hold all the query parameter\n    const [isLoading, setLoading]=useState(false);\n    // State to display if the form is loading\n\n    const [error,setError]=useState(false);\n    const [noResult,setNoResult]=useState(false);\n    // States to let user knows if there's any error\n\n    const [open, setOpen] = useState(false); // For Modal\n\n    const inlineStyle = {\n        modal : {\n          height: 'auto',\n          top: 'auto',\n          left: 'auto',\n          bottom: 'auto',\n          right: 'auto',\n        }\n      };\n\n    const travelClass = [\n        {key:'eco', text:'Economy', value:'ECONOMY'},\n        {key:'pre', text:'Premium Economy', value:'PREMIUM_ECONOMY'},\n        {key:'bus', text:'Business', value:'BUSINESS'},\n        {key:'fir', text:'First class', value:'FIRST'},\n    ]\n\n    const saveOption = (e, {name, value, checked})=>{\n        // Handle changes on both select boxes and radio\n        // Value is avaliable on select boxes, checked on radio\n        if (value) setSearchData({...searchData, [name]: value});\n        if (typeof checked !== 'undefined') setSearchData({...searchData, [name]: checked});\n    }\n\n    \n    const handleSubmit = ()=>{\n        if (searchData.originLocationCode && searchData.destinationLocationCode && searchData.departureDate && searchData.adults){\n            setLoading(true);\n            amadeus.shopping.flightOffersSearch.get(searchData)\n                .then(({data}) => {\n                    // console.log(data);\n                    // clean up duplicate price options, as the API has sorted the cheapest with shortest travel time option first\n                    // duplicate option is redundant\n                    const cleanedData = data.filter((option, index)=>(\n                        index === 0 || ((index>0) && ((option.price.grandTotal!==data[index-1].price.grandTotal)||(option.validatingAirlineCodes[0]!==data[index-1].validatingAirlineCodes[0])))\n                    ));\n                    setLoading(false);\n                    \n                    if (cleanedData.length) {\n                        setSearchResult(cleanedData);\n                        setError(false);\n                        setNoResult(false);\n\n                        setOpen(false);\n                    }\n                    else setNoResult(true)\n                }).catch((responseError) => {\n                    setLoading(false);\n                    setError(true);\n                });\n        }\n    }\n\n    return (\n        <Modal onClose={() => setOpen(false)}\n          onOpen={() => setOpen(true)}\n          open={open} style={inlineStyle.modal}\n          trigger={<Button>Search a Flight</Button> }>\n              <Modal.Content>\n                  <Form loading={isLoading} >\n                        <AirportSearch type={'Origin'} name ={'originLocationCode'} \n                            searchData={searchData} setSearchData={setSearchData}\n                            amadeus={amadeus}/>\n                        <AirportSearch type={'Destination'} name ={'destinationLocationCode'} \n                            searchData={searchData} setSearchData={setSearchData}\n                            amadeus={amadeus}/>\n                        <Form.Group widths='equal'>\n                            <DateInput type={'Departure'} name = {'departureDate'}\n                            searchData={searchData} setSearchData={setSearchData}\n                            isRequired/>\n                            <DateInput type={'Return'} name = {'returnDate'}\n                            searchData={searchData} setSearchData={setSearchData}/>\n                            <Form.Select\n                                fluid\n                                label={`Flight classes`}\n                                options={travelClass}\n                                name='travelClass'\n                                placeholder='Please select an option'\n                                onChange={saveOption}\n                                required\n                            />\n                        </Form.Group>\n                        <Form.Group widths='equal'>\n                            <NumberInput type={'Adult'} name = {'adults'}\n                            searchData={searchData} setSearchData={setSearchData}\n                            isRequired/>\n                            <NumberInput type={'Children'} name = {'children'}\n                            searchData={searchData} setSearchData={setSearchData}/>\n                            <NumberInput type={'Infants'} name = {'infants'}\n                            searchData={searchData} setSearchData={setSearchData}/>\n                        </Form.Group>\n                        {/* <Form.Group widths='equal'> */}\n                            \n                            <Form.Checkbox \n                                name='nonStop' \n                                label={`Nonstop flight`}\n                                onChange={saveOption}\n                            />\n                        {error?(<Message negative header='Bad Request' content='Please check your request'/>):(<></>)}\n                        {noResult?(<Message negative header='No matches' content=\"Current API use only support within the US\"/>):(<></>)}\n                        <Form.Field control={Button} color = {'blue'} onClick={handleSubmit}>Submit</Form.Field>\n                    </Form>\n              </Modal.Content>\n\n        </Modal>\n    )\n}\n\nexport default FlightSearchForm;"]},"metadata":{},"sourceType":"module"}