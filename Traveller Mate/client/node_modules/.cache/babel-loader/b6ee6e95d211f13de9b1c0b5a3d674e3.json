{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * A namespaced client for the\n * `/v2/schedule/flights` endpoints\n *\n * Access via the {@link Amadeus} object\n *\n * ```js\n * let amadeus = new Amadeus();\n * amadeus.schedule.flights;\n * ```\n *\n * @param {Client} client\n */\n\n\nvar Flights = /*#__PURE__*/function () {\n  function Flights(client) {\n    _classCallCheck(this, Flights);\n\n    this.client = client;\n  }\n  /**\n   * Provides real-time flight schedule data including up-to-date departure and arrival times,\n   *  terminal and gate information, flight duration and real-time delay status\n   *\n   * @param {Object} params\n   * @param {Double} params.carrierCode 2 to 3-character IATA carrier code - required\n   * @param {Double} params.flightNumber 1 to 4-digit number of the flight. e.g. 4537 - required\n   * @param {Double} params.scheduledDepartureDate scheduled departure date of the flight, local to the departure airport - required\n   * @return {Promise.<Response,ResponseError>} a Promise\n   * What's the current status of my flight?\n   * ```js\n   * amadeus.schedule.flights.get({\n   * carrierCode: 'AZ',\n   * flightNumber: '319',\n   * scheduledDepartureDate: '2021-03-13'\n   * });\n   * ```\n   */\n\n\n  _createClass(Flights, [{\n    key: \"get\",\n    value: function get() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.client.get('/v2/schedule/flights', params);\n    }\n  }]);\n\n  return Flights;\n}();\n\nvar _default = Flights;\nexports[\"default\"] = _default;\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["../../../../src/amadeus/namespaces/schedule/flights.js"],"names":["Flights","params"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;IAaMA,O;AACJ,WAAA,OAAA,CAAA,MAAA,EAAoB;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,CAAA;;AAClB,SAAA,MAAA,GAAA,MAAA;AACD;AAED;;;;;;;;;;;;;;;;;;;;;;0BAkBiB;AAAA,UAAbC,MAAa,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;AACf,aAAO,KAAA,MAAA,CAAA,GAAA,CAAA,sBAAA,EAAP,MAAO,CAAP;AACD;;;;;;eAGYD,O","sourcesContent":["/**\n * A namespaced client for the\n * `/v2/schedule/flights` endpoints\n *\n * Access via the {@link Amadeus} object\n *\n * ```js\n * let amadeus = new Amadeus();\n * amadeus.schedule.flights;\n * ```\n *\n * @param {Client} client\n */\nclass Flights {\n  constructor(client) {\n    this.client = client;\n  }\n\n  /**\n   * Provides real-time flight schedule data including up-to-date departure and arrival times,\n   *  terminal and gate information, flight duration and real-time delay status\n   *\n   * @param {Object} params\n   * @param {Double} params.carrierCode 2 to 3-character IATA carrier code - required\n   * @param {Double} params.flightNumber 1 to 4-digit number of the flight. e.g. 4537 - required\n   * @param {Double} params.scheduledDepartureDate scheduled departure date of the flight, local to the departure airport - required\n   * @return {Promise.<Response,ResponseError>} a Promise\n   * What's the current status of my flight?\n   * ```js\n   * amadeus.schedule.flights.get({\n   * carrierCode: 'AZ',\n   * flightNumber: '319',\n   * scheduledDepartureDate: '2021-03-13'\n   * });\n   * ```\n   */\n  get(params = {}) {\n    return this.client.get('/v2/schedule/flights', params);\n  }\n}\n\nexport default Flights;\n"]},"metadata":{},"sourceType":"script"}