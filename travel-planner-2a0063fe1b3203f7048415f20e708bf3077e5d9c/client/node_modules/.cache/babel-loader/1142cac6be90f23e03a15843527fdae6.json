{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zivko\\\\Music\\\\temp\\\\travel-planner-2a0063fe1b3203f7048415f20e708bf3077e5d9c\\\\client\\\\src\\\\components\\\\SavedTrips\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { QUERY_ME } from '../../utils/queries';\nimport { useQuery } from '@apollo/react-hooks';\nimport CreateTrip from '../CreateTrip';\nimport { Loader, Divider } from 'semantic-ui-react';\nimport SingleTrip from '../SingleTrip';\n\nconst SavedTrips = ({\n  amadeus\n}) => {\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_ME);\n  const [userData, setUserData] = useState({});\n  useEffect(() => {\n    // Check if data is avaliable\n    if (data) {\n      const {\n        me\n      } = data;\n      setUserData({ ...userData,\n        ...me\n      });\n    }\n  }, [data]); // useEffect(()=>{\n  //     console.log(userData);\n  // })\n\n  if (loading || !userData.trips) return /*#__PURE__*/React.createElement(Loader, {\n    active: true,\n    inline: \"centered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 44\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, userData.trips.map(trip => {\n    return /*#__PURE__*/React.createElement(SingleTrip, {\n      tripsData: userData.trips,\n      setUserData: setUserData,\n      trip: trip,\n      amadeus: amadeus,\n      key: trip._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 24\n      }\n    });\n  }), userData.trips.length ? /*#__PURE__*/React.createElement(Divider, {\n    className: \"py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 37\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(CreateTrip, {\n    userData: userData,\n    setUserData: setUserData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default SavedTrips;","map":{"version":3,"sources":["C:/Users/zivko/Music/temp/travel-planner-2a0063fe1b3203f7048415f20e708bf3077e5d9c/client/src/components/SavedTrips/index.js"],"names":["React","useState","useEffect","QUERY_ME","useQuery","CreateTrip","Loader","Divider","SingleTrip","SavedTrips","amadeus","loading","data","userData","setUserData","me","trips","map","trip","_id","length"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,MAAT,EAAgBC,OAAhB,QAA+B,mBAA/B;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AAEA,MAAMC,UAAU,GAAE,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAC5B,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAkBR,QAAQ,CAACD,QAAD,CAAhC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV;AACA,QAAIU,IAAJ,EAAU;AACN,YAAM;AAACG,QAAAA;AAAD,UAAKH,IAAX;AACAE,MAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAc,WAAGE;AAAjB,OAAD,CAAX;AACH;AACJ,GANQ,EAMP,CAACH,IAAD,CANO,CAAT,CAJ4B,CAY5B;AACA;AACA;;AACA,MAAID,OAAO,IAAI,CAACE,QAAQ,CAACG,KAAzB,EAAgC,oBAAO,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAe,IAAA,MAAM,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEhC,sBACI,0CACKH,QAAQ,CAACG,KAAT,CAAeC,GAAf,CAAoBC,IAAD,IAAS;AACzB,wBAAO,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEL,QAAQ,CAACG,KAAhC;AAAuC,MAAA,WAAW,EAAEF,WAApD;AAAiE,MAAA,IAAI,EAAEI,IAAvE;AAA6E,MAAA,OAAO,EAAER,OAAtF;AAA+F,MAAA,GAAG,EAAEQ,IAAI,CAACC,GAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFA,CADL,EAIKN,QAAQ,CAACG,KAAT,CAAeI,MAAf,gBAAuB,oBAAC,OAAD;AAAU,IAAA,SAAS,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,gBAAqD,yCAJ1D,eAKI,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAEP,QAAtB;AAAgC,IAAA,WAAW,EAAEC,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AAUH,CA3BD;;AA8BA,eAAeL,UAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {QUERY_ME} from '../../utils/queries';\nimport {useQuery} from '@apollo/react-hooks';\nimport CreateTrip from '../CreateTrip';\nimport { Loader,Divider } from 'semantic-ui-react'\nimport SingleTrip from '../SingleTrip';\n\nconst SavedTrips= ({amadeus}) =>{\n    const {loading, data} = useQuery(QUERY_ME);\n    const [userData, setUserData]=useState({});\n    \n    useEffect(()=>{\n        // Check if data is avaliable\n        if (data) {\n            const {me}=data;\n            setUserData({...userData, ...me});\n        } \n    },[data]);\n\n    // useEffect(()=>{\n    //     console.log(userData);\n    // })\n    if (loading || !userData.trips) return <Loader active inline='centered' />\n\n    return (\n        <>\n            {userData.trips.map((trip) =>{\n                return <SingleTrip tripsData={userData.trips} setUserData={setUserData} trip={trip} amadeus={amadeus} key={trip._id}/>\n            })}\n            {userData.trips.length? <Divider  className='py-2'/>: <></>}\n            <CreateTrip userData={userData} setUserData={setUserData}/> \n        \n        </>\n    )\n}\n\n\nexport default SavedTrips"]},"metadata":{},"sourceType":"module"}