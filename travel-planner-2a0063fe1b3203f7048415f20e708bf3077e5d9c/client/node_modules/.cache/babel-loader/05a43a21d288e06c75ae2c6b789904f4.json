{"ast":null,"code":"import moment from 'moment';\nexport function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n\n  return name + 's';\n}\nexport function durationFormater(duration) {\n  // Remove PT at start and split into hour and minutes\n  // Can't use moment due to it's format\n  const time = duration.slice(2).split(\"H\");\n\n  if (time[1]) {\n    const min = time[1].replace(\"M\", \"\");\n    return `${time[0]}h ${min ? min : '00'}m`;\n  } else {\n    return duration.slice(2).toLowerCase();\n  }\n}\nexport function timeFormater(time) {\n  return moment(time).format(\"llll\");\n}","map":{"version":3,"sources":["C:/Users/zivko/Music/travel-planner-2a0063fe1b3203f7048415f20e708bf3077e5d9c/client/src/utils/helpers.js"],"names":["moment","pluralize","name","count","durationFormater","duration","time","slice","split","min","replace","toLowerCase","timeFormater","format"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,KAAzB,EAAgC;AACrC,MAAIA,KAAK,KAAK,CAAd,EAAiB;AACf,WAAOD,IAAP;AACD;;AACD,SAAOA,IAAI,GAAG,GAAd;AACD;AAED,OAAO,SAASE,gBAAT,CAA0BC,QAA1B,EAAoC;AACzC;AACA;AACA,QAAMC,IAAI,GAAGD,QAAQ,CAACE,KAAT,CAAe,CAAf,EAAkBC,KAAlB,CAAwB,GAAxB,CAAb;;AACA,MAAIF,IAAI,CAAC,CAAD,CAAR,EAAY;AACV,UAAMG,GAAG,GAAGH,IAAI,CAAC,CAAD,CAAJ,CAAQI,OAAR,CAAgB,GAAhB,EAAoB,EAApB,CAAZ;AACA,WAAQ,GAAEJ,IAAI,CAAC,CAAD,CAAI,KAAKG,GAAG,GAAGA,GAAH,GAAQ,IAAK,GAAvC;AACD,GAHD,MAGO;AAEL,WAAOJ,QAAQ,CAACE,KAAT,CAAe,CAAf,EAAkBI,WAAlB,EAAP;AACD;AAEF;AAED,OAAO,SAASC,YAAT,CAAsBN,IAAtB,EAA4B;AACjC,SAAON,MAAM,CAACM,IAAD,CAAN,CAAaO,MAAb,CAAoB,MAApB,CAAP;AACD","sourcesContent":["import moment from 'moment';\n\nexport function pluralize(name, count) {\n  if (count === 1) {\n    return name\n  }\n  return name + 's'\n}\n\nexport function durationFormater(duration) {\n  // Remove PT at start and split into hour and minutes\n  // Can't use moment due to it's format\n  const time = duration.slice(2).split(\"H\");\n  if (time[1]){\n    const min = time[1].replace(\"M\",\"\");\n    return `${time[0]}h ${ min ? min :'00'}m`\n  } else {\n    \n    return duration.slice(2).toLowerCase();\n  }\n\n}\n\nexport function timeFormater(time) {\n  return moment(time).format(\"llll\");\n}"]},"metadata":{},"sourceType":"module"}