{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zivko\\\\Music\\\\travel-planner-2a0063fe1b3203f7048415f20e708bf3077e5d9c\\\\client\\\\src\\\\components\\\\CreateTrip\\\\index.js\";\nimport React, { useState } from 'react';\nimport { Form, Button, TextArea, Modal, Input } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport DateInput from '../CustomFields/DateInput';\nimport { ADD_TRIP } from '../../utils/mutations';\n\nconst TripForm = ({\n  userData,\n  setUserData\n}) => {\n  const [tripData, setTripData] = useState({});\n  const [isLoading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false); // For Modal\n\n  const [createTrip, {\n    error\n  }] = useMutation(ADD_TRIP);\n  const inlineStyle = {\n    modal: {\n      height: 'auto',\n      top: 'auto',\n      left: 'auto',\n      bottom: 'auto',\n      right: 'auto',\n      maxWidth: '600px'\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (tripData.title && tripData.endDate && tripData.startDate) {\n      setLoading(true);\n\n      try {\n        const {\n          data: {\n            addTrip\n          }\n        } = await createTrip({\n          variables: {\n            tripData: tripData\n          }\n        });\n        setLoading(false);\n        setOpen(false); // console.log(addTrip);\n\n        setUserData({ ...userData,\n          ...addTrip\n        });\n      } catch (err) {\n        alert(\"Something went wrong\");\n      }\n    }\n  };\n\n  const handleInput = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setTripData({ ...tripData,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    open: open,\n    style: inlineStyle.modal,\n    trigger: /*#__PURE__*/React.createElement(Button, {\n      color: 'green',\n      className: 'mb-5',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 18\n      }\n    }, \" + Add Trip\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    loading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    control: Input,\n    label: \"Trip name\",\n    name: 'title',\n    required: true,\n    placeholder: \"Where do you want to go?\",\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DateInput, {\n    type: 'Begins at',\n    name: 'startDate',\n    searchData: tripData,\n    setSearchData: setTripData,\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(DateInput, {\n    type: 'Ends at',\n    name: 'endDate',\n    searchData: tripData,\n    setSearchData: setTripData,\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    control: TextArea,\n    label: \"Goals\",\n    name: 'goal',\n    placeholder: \"What do you want to do?\",\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    fluid: true,\n    control: Button,\n    color: 'blue',\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n};\n\nexport default TripForm;","map":{"version":3,"sources":["C:/Users/zivko/Music/travel-planner-2a0063fe1b3203f7048415f20e708bf3077e5d9c/client/src/components/CreateTrip/index.js"],"names":["React","useState","Form","Button","TextArea","Modal","Input","useMutation","DateInput","ADD_TRIP","TripForm","userData","setUserData","tripData","setTripData","isLoading","setLoading","open","setOpen","createTrip","error","inlineStyle","modal","height","top","left","bottom","right","maxWidth","handleSubmit","e","preventDefault","title","endDate","startDate","data","addTrip","variables","err","alert","handleInput","event","name","value","target"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { Form, Button, TextArea, Modal, Input } from 'semantic-ui-react';\nimport {useMutation} from '@apollo/react-hooks';\nimport DateInput from '../CustomFields/DateInput';\nimport {ADD_TRIP} from '../../utils/mutations';\n\nconst TripForm = ({userData, setUserData})=>{\n\n    const [tripData, setTripData] = useState({});\n    const [isLoading, setLoading]=useState(false);\n\n    const [open, setOpen] = useState(false); // For Modal\n\n    const [createTrip, {error}] =useMutation(ADD_TRIP);\n\n    const inlineStyle = {\n        modal : {\n          height: 'auto',\n          top: 'auto',\n          left: 'auto',\n          bottom: 'auto',\n          right: 'auto',\n          maxWidth:'600px',\n        }\n      };\n    \n    const handleSubmit = async (e)=>{\n        e.preventDefault();\n        if (tripData.title && tripData.endDate && tripData.startDate){\n            setLoading(true);\n            try {\n                const {data: {addTrip}} = await createTrip(\n                    {\n                        variables:{tripData: tripData}\n                    }\n                )\n                setLoading(false);\n                setOpen(false);\n                // console.log(addTrip);\n                setUserData({...userData, ...addTrip});\n            } catch (err){\n                alert(\"Something went wrong\");\n            }\n        }\n    }\n    const handleInput = (event) => {\n        const { name, value } = event.target;\n        setTripData({ ...tripData, [name]: value });\n    };\n\n    return (\n        <Modal onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        open={open} style={inlineStyle.modal}\n        trigger={<Button color = {'green'} className={'mb-5'}> + Add Trip</Button> }>\n            <Modal.Content>\n                <Form loading={isLoading}>\n                    <Form.Field\n                        control={Input}\n                        label='Trip name'\n                        name={'title'}\n                        required\n                        placeholder='Where do you want to go?'\n                        onChange={handleInput}\n                    />\n                    <Form.Group widths='equal'>\n                        <DateInput type={'Begins at'} name = {'startDate'}\n                        searchData={tripData} setSearchData={setTripData}\n                        isRequired/>\n                        <DateInput type={'Ends at'} name = {'endDate'}\n                        searchData={tripData} setSearchData={setTripData}\n                        isRequired/>\n                    </Form.Group>\n                    <Form.Field\n                        control={TextArea}\n                        label='Goals'\n                        name={'goal'}\n                        placeholder='What do you want to do?'\n                        onChange={handleInput}\n\n                    />\n                     {/* {showAlert?(<Message negative content='Please check your creditials'/>):(<></>)} */}\n                    <Form.Field fluid control={Button} color = {'blue'} onClick={handleSubmit}>Submit</Form.Field>\n                </Form>\n            </Modal.Content>\n\n        </Modal>\n    )\n}\n\nexport default TripForm;"]},"metadata":{},"sourceType":"module"}