{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zivko\\\\Music\\\\travel-planner-2a0063fe1b3203f7048415f20e708bf3077e5d9c\\\\client\\\\src\\\\components\\\\HotelSearch\\\\index.js\";\nimport React, { useState } from 'react';\nimport { Form, Button, Message, Modal, Rating } from 'semantic-ui-react';\nimport AirportSearch from '../CustomFields/AiportSearch';\nimport DateInput from '../CustomFields/DateInput';\nimport NumberInput from '../CustomFields/NumberInput';\n\nconst HotelSearchForm = ({\n  amadeus,\n  setSearchResult\n}) => {\n  const [searchData, setSearchData] = useState({\n    radius: '20',\n    currencyCode: 'USD'\n  }); // The object that'll hold all the query parameter. Preset to at most 20km away from airport\n\n  const [isLoading, setLoading] = useState(false); // State to display if the form is loading\n\n  const [error, setError] = useState(false);\n  const [noResult, setNoResult] = useState(false); // States to let user knows if there's any error\n\n  const [open, setOpen] = useState(false); // For Modal\n\n  const inlineStyle = {\n    modal: {\n      height: 'auto',\n      top: 'auto',\n      left: 'auto',\n      bottom: 'auto',\n      right: 'auto'\n    }\n  };\n\n  const handleSubmit = () => {\n    // if (searchData.originLocationCode && searchData.destinationLocationCode && searchData.departureDate && searchData.adults){\n    setLoading(true);\n    amadeus.shopping.hotelOffers.get(searchData).then(({\n      data\n    }) => {\n      // clean up duplicate price options, as the API has sorted the cheapest with shortest travel time option first\n      // duplicate option is redundant\n      setLoading(false);\n\n      if (data.length) {\n        setSearchResult(data);\n        setError(false);\n        setNoResult(false);\n        setOpen(false);\n      } else setNoResult(true);\n    }).catch(responseError => {\n      setLoading(false);\n      setError(true);\n    }); // }\n    // console.log(searchData);\n  };\n\n  const rating = [2, 3, 4, 5];\n\n  const handleRate = (e, {\n    rating\n  }) => {// console.log(rating);\n    // Will be added later\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    open: open,\n    style: inlineStyle.modal,\n    trigger: /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 18\n      }\n    }, \"Search a Hotel\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    loading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AirportSearch, {\n    type: 'Arrival',\n    name: 'cityCode',\n    searchData: searchData,\n    setSearchData: setSearchData,\n    amadeus: amadeus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DateInput, {\n    type: 'Check in',\n    name: 'checkInDate',\n    searchData: searchData,\n    setSearchData: setSearchData,\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(DateInput, {\n    type: 'Check out',\n    name: 'checkOutDate',\n    searchData: searchData,\n    setSearchData: setSearchData,\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(NumberInput, {\n    type: 'Number of guests',\n    name: 'adults',\n    searchData: searchData,\n    setSearchData: setSearchData,\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(NumberInput, {\n    type: 'Number of rooms',\n    name: 'roomQuantity',\n    searchData: searchData,\n    setSearchData: setSearchData,\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  })), error ? /*#__PURE__*/React.createElement(Message, {\n    negative: true,\n    header: \"Bad Request\",\n    content: \"Please check your request\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null), noResult ? /*#__PURE__*/React.createElement(Message, {\n    negative: true,\n    header: \"No matches\",\n    content: \"There's no hotel offer that matches your criteria\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 32\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(Form.Field, {\n    control: Button,\n    color: 'blue',\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n};\n\nexport default HotelSearchForm;","map":{"version":3,"sources":["C:/Users/zivko/Music/travel-planner-2a0063fe1b3203f7048415f20e708bf3077e5d9c/client/src/components/HotelSearch/index.js"],"names":["React","useState","Form","Button","Message","Modal","Rating","AirportSearch","DateInput","NumberInput","HotelSearchForm","amadeus","setSearchResult","searchData","setSearchData","radius","currencyCode","isLoading","setLoading","error","setError","noResult","setNoResult","open","setOpen","inlineStyle","modal","height","top","left","bottom","right","handleSubmit","shopping","hotelOffers","get","then","data","length","catch","responseError","rating","handleRate","e"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,OAAvB,EAAgCC,KAAhC,EAAuCC,MAAvC,QAAqD,mBAArD;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAD,KAA8B;AAClD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC;AAACc,IAAAA,MAAM,EAAC,IAAR;AAAcC,IAAAA,YAAY,EAAC;AAA3B,GAAD,CAA5C,CADkD,CAElD;;AACA,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC,CAHkD,CAIlD;;AAEA,QAAM,CAACkB,KAAD,EAAOC,QAAP,IAAiBnB,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM,CAACoB,QAAD,EAAUC,WAAV,IAAuBrB,QAAQ,CAAC,KAAD,CAArC,CAPkD,CAQlD;;AAEA,QAAM,CAACsB,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,KAAD,CAAhC,CAVkD,CAUT;;AAEzC,QAAMwB,WAAW,GAAG;AAChBC,IAAAA,KAAK,EAAG;AACNC,MAAAA,MAAM,EAAE,MADF;AAENC,MAAAA,GAAG,EAAE,MAFC;AAGNC,MAAAA,IAAI,EAAE,MAHA;AAINC,MAAAA,MAAM,EAAE,MAJF;AAKNC,MAAAA,KAAK,EAAE;AALD;AADQ,GAApB;;AAUA,QAAMC,YAAY,GAAG,MAAI;AACrB;AACId,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAP,IAAAA,OAAO,CAACsB,QAAR,CAAiBC,WAAjB,CAA6BC,GAA7B,CAAiCtB,UAAjC,EACKuB,IADL,CACU,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAY;AACd;AACA;AACAnB,MAAAA,UAAU,CAAC,KAAD,CAAV;;AAEA,UAAImB,IAAI,CAACC,MAAT,EAAiB;AACb1B,QAAAA,eAAe,CAACyB,IAAD,CAAf;AACAjB,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACAE,QAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,QAAAA,OAAO,CAAC,KAAD,CAAP;AACH,OALD,MAMKF,WAAW,CAAC,IAAD,CAAX;AACR,KAbL,EAaOiB,KAbP,CAacC,aAAD,IAAmB;AACxBtB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAhBL,EAHiB,CAoBrB;AACA;AACH,GAtBD;;AAwBA,QAAMqB,MAAM,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CAAf;;AACA,QAAMC,UAAU,GAAG,CAACC,CAAD,EAAG;AAACF,IAAAA;AAAD,GAAH,KAAc,CAC7B;AACA;AACH,GAHD;;AAKA,sBACI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAE,MAAMjB,OAAO,CAAC,KAAD,CAA7B;AACA,IAAA,MAAM,EAAE,MAAMA,OAAO,CAAC,IAAD,CADrB;AAEA,IAAA,IAAI,EAAED,IAFN;AAEY,IAAA,KAAK,EAAEE,WAAW,CAACC,KAF/B;AAGA,IAAA,OAAO,eAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAET,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAE,SAArB;AAAgC,IAAA,IAAI,EAAG,UAAvC;AACI,IAAA,UAAU,EAAEJ,UADhB;AAC4B,IAAA,aAAa,EAAEC,aAD3C;AAEI,IAAA,OAAO,EAAEH,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAII,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,MAAM,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAE,UAAjB;AAA6B,IAAA,IAAI,EAAI,aAArC;AACA,IAAA,UAAU,EAAEE,UADZ;AACwB,IAAA,aAAa,EAAEC,aADvC;AAEA,IAAA,UAAU,MAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAII,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAE,WAAjB;AAA8B,IAAA,IAAI,EAAI,cAAtC;AACA,IAAA,UAAU,EAAED,UADZ;AACwB,IAAA,aAAa,EAAEC,aADvC;AAEA,IAAA,UAAU,MAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAJJ,eAYI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,MAAM,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAE,kBAAnB;AAAuC,IAAA,IAAI,EAAI,QAA/C;AACA,IAAA,UAAU,EAAED,UADZ;AACwB,IAAA,aAAa,EAAEC,aADvC;AAEA,IAAA,UAAU,MAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAOI,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAE,iBAAnB;AAAsC,IAAA,IAAI,EAAI,cAA9C;AACA,IAAA,UAAU,EAAED,UADZ;AACwB,IAAA,aAAa,EAAEC,aADvC;AAEA,IAAA,UAAU,MAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CAZJ,EAyBKK,KAAK,gBAAE,oBAAC,OAAD;AAAS,IAAA,QAAQ,MAAjB;AAAkB,IAAA,MAAM,EAAC,aAAzB;AAAuC,IAAA,OAAO,EAAC,2BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAF,gBAAiF,yCAzB3F,EA0BKE,QAAQ,gBAAE,oBAAC,OAAD;AAAS,IAAA,QAAQ,MAAjB;AAAkB,IAAA,MAAM,EAAC,YAAzB;AAAsC,IAAA,OAAO,EAAC,mDAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAF,gBAAwG,yCA1BrH,eA2BI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,EAAElB,MAArB;AAA6B,IAAA,KAAK,EAAI,MAAtC;AAA8C,IAAA,OAAO,EAAE6B,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BJ,CADJ,CAJJ,CADJ;AAuCH,CA3FD;;AA6FA,eAAetB,eAAf","sourcesContent":["import React, {useState} from 'react';\nimport { Form, Button, Message, Modal, Rating } from 'semantic-ui-react'\nimport AirportSearch from '../CustomFields/AiportSearch';\nimport DateInput from '../CustomFields/DateInput';\nimport NumberInput from '../CustomFields/NumberInput';\n\nconst HotelSearchForm = ({amadeus, setSearchResult})=>{\n    const [searchData, setSearchData] = useState({radius:'20' ,currencyCode:'USD'});\n    // The object that'll hold all the query parameter. Preset to at most 20km away from airport\n    const [isLoading, setLoading]=useState(false);\n    // State to display if the form is loading\n\n    const [error,setError]=useState(false);\n    const [noResult,setNoResult]=useState(false);\n    // States to let user knows if there's any error\n\n    const [open, setOpen] = useState(false); // For Modal\n\n    const inlineStyle = {\n        modal : {\n          height: 'auto',\n          top: 'auto',\n          left: 'auto',\n          bottom: 'auto',\n          right: 'auto',\n        }\n      };\n\n    const handleSubmit = ()=>{\n        // if (searchData.originLocationCode && searchData.destinationLocationCode && searchData.departureDate && searchData.adults){\n            setLoading(true);\n            amadeus.shopping.hotelOffers.get(searchData)\n                .then(({data}) => {\n                    // clean up duplicate price options, as the API has sorted the cheapest with shortest travel time option first\n                    // duplicate option is redundant\n                    setLoading(false);\n                    \n                    if (data.length) {\n                        setSearchResult(data);\n                        setError(false);\n                        setNoResult(false);\n                        setOpen(false);\n                    }\n                    else setNoResult(true)\n                }).catch((responseError) => {\n                    setLoading(false);\n                    setError(true);\n                });\n        // }\n        // console.log(searchData);\n    }\n\n    const rating = [2,3,4,5];\n    const handleRate = (e,{rating})=>{\n        // console.log(rating);\n        // Will be added later\n    }\n\n    return (\n        <Modal onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        open={open} style={inlineStyle.modal}\n        trigger={<Button>Search a Hotel</Button> }>\n            <Modal.Content>\n                <Form loading={isLoading} >\n                    <AirportSearch type={'Arrival'} name ={'cityCode'} \n                        searchData={searchData} setSearchData={setSearchData}\n                        amadeus={amadeus}/>\n                    <Form.Group widths='equal'>\n                        <DateInput type={'Check in'} name = {'checkInDate'}\n                        searchData={searchData} setSearchData={setSearchData}\n                        isRequired/>\n                        <DateInput type={'Check out'} name = {'checkOutDate'}\n                        searchData={searchData} setSearchData={setSearchData}\n                        isRequired/>\n                    </Form.Group>\n                    <Form.Group widths='equal'>\n                        {/* <NumberInput type={'Maximum distance from airport (miles)'} name = {'radius'}\n                        searchData={searchData} setSearchData={setSearchData}\n                        isRequired/> */}\n                        <NumberInput type={'Number of guests'} name = {'adults'}\n                        searchData={searchData} setSearchData={setSearchData}\n                        isRequired/>\n                        <NumberInput type={'Number of rooms'} name = {'roomQuantity'}\n                        searchData={searchData} setSearchData={setSearchData}\n                        isRequired/>\n                    </Form.Group>\n                    {/* <Form.Group widths='equal'> */}\n                    {/* <div style={{fontWeight: 'bold', marginBottom:'10px'}}>Minimum rating: <Rating icon='star' defaultRating={1} maxRating={5} onRate={handleRate}/></div> */}\n                    {error?(<Message negative header='Bad Request' content='Please check your request'/>):(<></>)}\n                    {noResult?(<Message negative header='No matches' content=\"There's no hotel offer that matches your criteria\"/>):(<></>)}\n                    <Form.Field control={Button} color = {'blue'} onClick={handleSubmit}>Submit</Form.Field>\n                </Form>\n            </Modal.Content>\n\n        </Modal>\n    )\n}\n\nexport default HotelSearchForm;"]},"metadata":{},"sourceType":"module"}